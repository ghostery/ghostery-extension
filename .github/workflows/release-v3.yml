name: Upload builds to release

on:
  release:
    types:
      - created

jobs:
  release-v10:
    if: startsWith(github.ref, 'refs/tags/v10')
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: extension-manifest-v3
    steps:
      - uses: actions/checkout@v2
      - run: |
          SHA=$(git rev-parse --short "$GITHUB_SHA")
          echo "SHA=$SHA" >> "$GITHUB_ENV"

          VERSION=$(node -p "require('./package.json').version")
          echo "VERSION=$VERSION" >> "$GITHUB_ENV"
      - uses: actions/setup-node@v3
        with:
          node-version-file: '.tool-versions'
          cache: 'npm'
          cache-dependency-path: ./package-lock.json
      - name: Install dependencies in repo root
        run: npm ci
        working-directory: .
      - name: Build packages
        run: npm run package -- --simple

      - name: Upload Firefox build
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: extension-manifest-v3/web-ext-artifacts/ghostery-firefox.zip
          asset_name: ghostery-firefox.zip
          asset_content_type: application/gzip

      - name: Upload Chrome build
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: extension-manifest-v3/web-ext-artifacts/ghostery-chrome.zip
          asset_name: ghostery-chrome.zip
          asset_content_type: application/gzip

      - name: Upload Opera build
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: extension-manifest-v3/web-ext-artifacts/ghostery-opera.zip
          asset_name: ghostery-opera.zip
          asset_content_type: application/gzip

      - name: Upload Edge build
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: extension-manifest-v3/web-ext-artifacts/ghostery-edge.zip
          asset_name: ghostery-edge.zip
          asset_content_type: application/gzip
